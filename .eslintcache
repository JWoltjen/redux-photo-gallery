[{"C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\index.js":"1","C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\galleryState.js":"2","C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\App.js":"3"},{"size":479,"mtime":1637689636865,"results":"4","hashOfConfig":"5"},{"size":905,"mtime":1637613684765,"results":"6","hashOfConfig":"5"},{"size":887,"mtime":1637613684749,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t315p7",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},"C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\index.js",[],"C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\galleryState.js",[],["16","17"],"C:\\Users\\Jeff's PC\\projects\\redux-photo-gallery\\src\\App.js",["18"],"import './App.css';\r\nimport {useEffect} from 'react' \r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getPhotos} from './galleryState'; \r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch(); \r\n  const photos = useSelector(state => state.gallery.photos)\r\n\r\n  useEffect(() => {\r\n    dispatch(getPhotos()); \r\n  }, [dispatch]); \r\n  console.log(photos)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h1>Photo Gallery</h1>\r\n        <p>This is a simple photo gallery made using redux toolkit and redux thunk.</p>\r\n        <hr />\r\n        <div className='Gallery'>\r\n          {photos.map(photo => \r\n            <img \r\n              key={photo.id}\r\n              src={photo.download_url}\r\n              width='400'\r\n              height='400'\r\n            />\r\n          )}\r\n        </div>\r\n            <button>View More</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":23,"column":13,"nodeType":"25","endLine":28,"endColumn":15},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]